# Generated by Django 5.0.6 on 2024-06-15 15:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreperfil', models.CharField(max_length=255)),
                ('estado', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialistType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.city')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.BooleanField(default=True)),
                ('ciudad', models.CharField(choices=[('bucaramanga', 'Bucaramanga'), ('medellin', 'Medellín'), ('bogota', 'Bogotá')], default='bucaramanga', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
                ('perfil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='perfil.perfil')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('petTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.pettype')),
            ],
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.city')),
                ('clinicId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.clinic')),
                ('specialistTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.specialisttype')),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pqrsf_type', models.CharField(choices=[('P', 'Petition'), ('Q', 'Complaint'), ('R', 'Claim'), ('S', 'Suggestion'), ('F', 'Congratulation')], max_length=1)),
                ('message', models.TextField()),
                ('response', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_by', models.CharField(max_length=150)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.breed')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.city')),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.clinic')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.pet')),
                ('pet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.pettype')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.specialist')),
                ('specialist_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='perfil.specialisttype')),
            ],
        ),
    ]
